<Start>
-> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> <ClassDeclOrFuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> <FuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> <FuncHead> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  <FuncHead2> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  <FParams>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' <Type>  <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   <ArraySize> <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' <ArraySize2> <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']' <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' <Type>  <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'   <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'     <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' <RelExpr> ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' <ArithExpr> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' <Term> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' <Factor> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' <VarOrFuncCall> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Term> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Factor> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <VarOrFuncCall> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <AddOp> <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  <Factor> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'  <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'   <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' <Statement> <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' <SimpleStatement> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  <Expr>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'  <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' <Statement> <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' <RelExpr> ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' <ArithExpr> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' <Term> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' <Factor> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' <VarOrFuncCall> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <ArithExpr>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Term> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Factor> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <VarOrFuncCall> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <AddOp> <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  <Factor> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  <VarOrFuncCall> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'  <VarOrFuncCall2> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'   <Indice>  <VarOrFuncCall3> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'     <VarOrFuncCall3> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'     <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      <AddOp> <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  <Term>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  <Factor> <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'  <Term2>  <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'   <ArithExpr2>   ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' <Statement> <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' <RelExpr> ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' <ArithExpr> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' <Term> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' <Factor> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' <VarOrFuncCall> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' <ArithExpr> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   <ArithExpr2> <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   <RelOp> <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  <ArithExpr>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  <Term> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  <Factor> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  <VarOrFuncCall> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' <ArithExpr> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     <AddOp> <Term>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  <Term>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  <Factor> <Term2>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'   <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'   <Term2> <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'   <ArithExpr2>   ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then' <StatBlock> 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' <Statement> <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' <SimpleStatement> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  <Expr>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' <ArithExpr> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'   <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'   <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'   <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'   <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' <Statement> <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' <SimpleStatement> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  <Expr>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' <ArithExpr> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     <AddOp> <Term>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  <Term>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  <Factor> <Term2>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'   <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'   <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'   <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'   <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' <Statement> <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' <SimpleStatement> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     <AddOp> <Term>  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  <Term>  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  <Factor> <Term2>  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']' <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   <SimpleStatement3> ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  <Expr>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'     <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'     <Expr2>  ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';' <StatementRepetition>  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else' <StatBlock>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' <Statement> <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' <SimpleStatement> ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  <Expr>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     <AddOp> <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  <Factor> <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'   <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'   <Expr2>  ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';' <StatementRepetition>  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' <Statement> <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' <SimpleStatement> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  <Expr>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     <AddOp> <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  <Factor> <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'   <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'   <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <ClassDeclOrFuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <FuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <FuncHead> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  <FuncHead2> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  <FParams>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' <Type>  <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   <ArraySize> <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' <ArraySize2> <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']' <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' <Type>  <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'   <ArraySizeRepetition>  <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'     <FParamsTail>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'     <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' <RelExpr> ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' <ArithExpr> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' <Term> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' <Factor> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' <VarOrFuncCall> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <Term2> <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <ArithExpr2> <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     <RelOp> <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <ArithExpr>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Term> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <Factor> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  <VarOrFuncCall> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <Term2> <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     <ArithExpr2>   ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')' <StatBlock>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' <Statement> <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' <Expr> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' <ArithExpr> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' <Term> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' <Factor> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' <ArithExpr> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' <VarOrFuncCall> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     <Term2> <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     <ArithExpr2> ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']' <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'   <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'   <Term2> <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'   <ArithExpr2> <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'   <Expr2> ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' <Statement> <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' <SimpleStatement> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'  <SimpleStatement2> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'   <Indice>  <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     <SimpleStatement3> ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  <Expr>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  <ArithExpr> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  <Term> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     <Term2> <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     <AddOp> <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  <Term>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  <Factor> <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'  <Term2>  <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'   <ArithExpr2> <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'   <Expr2>  ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';' <StatementRepetition>  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <ClassDeclOrFuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <FuncDef> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  <FuncHead> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  <FuncHead2> <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  <FParams>  ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' <ReturnType>  <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   <FuncBody> <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  <LocalVarDecl> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' <Type> <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 



-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'  <LocalVarDecl2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   <ArraySize> <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' <ArraySize2> <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']' <ArraySizeRepetition>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 


-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <ArithExpr> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Term> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' <Factor> <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <Term2> <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  <ArithExpr2> ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']' <Indice>  <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   <SimpleStatement3> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Expr>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <ArithExpr> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Term> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  <Factor> <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Term2> <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <ArithExpr2> <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'  <Expr2>  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <AParams>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'     <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'     <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'     <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'  <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'  <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'  <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'   <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <AParams>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'   <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <LocalVarDeclOrStmt> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <Statement> <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <SimpleStatement> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  <SimpleStatement2> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <AParams>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  <VarOrFuncCall> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'  <VarOrFuncCall2> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'   <Indice>  <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <VarOrFuncCall3> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'     <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Expr> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <ArithExpr> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Term> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' <Factor> <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <Term2> <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <ArithExpr2> <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'  <Expr2> <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'   <AParamsTail>  ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  <SimpleStatement4> ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' <LocalVarDeclOrStmtRepetition>  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';'  '}'  <ClassDeclOrFuncDefRepetition> 'EOF' 

-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';'  '}'  'EOF' 
-> 'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'integer literal'     ')'  '{' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'     '-'  'id'      '-'  'integer literal'     ')'  '{' 'if' '(' 'id'   '[' 'id'     ']'   '>'  'id'   '[' 'id'     '+'  'integer literal'   ']'     ')' 'then'  '{' 'id'     '='  'id'   '[' 'id'     ']'     ';' 'id'   '[' 'id'     ']'   '='  'id'   '[' 'id'     '+'  'integer literal'   ']'     ';' 'id'   '[' 'id'     '+'  'integer literal'   ']'   '='  'id'       ';'  '}' 'else'    ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('  'id'  ':' 'integer'   '[' 'integer literal'  ']'   ',' 'id'  ':' 'integer'      ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'     ';' 'localvar' 'id'  ':' 'integer'     ';' 'id'     '='  'id'       ';' 'id'     '='  'integer literal'    ';' 'while' '(' 'id'     '<'  'id'       ')'  '{' 'write' '(' 'id'   '[' 'id'     ']'    ')'  ';' 'id'     '='  'id'     '+'  'integer literal'     ';'  '}'  ';'  '}'  'function' 'id'  '('   ')' '=>' 'void'   '{'  'localvar' 'id'  ':' 'integer'   '[' 'integer literal'  ']'   ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'   '[' 'integer literal'  ']'   '='  'integer literal'    ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';' 'id'  '('  'id'      ',' 'integer literal'    ')'  ';'  '}'  'EOF' 
